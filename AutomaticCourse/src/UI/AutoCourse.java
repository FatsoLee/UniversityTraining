/*
 * AutoCourse.java
 *
 * Created on __DATE__, __TIME__
 */

package UI;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.table.TableModel;

import JDBC.ArrangeImpl;

/**
 *
 * @author  __USER__
 */
public class AutoCourse extends javax.swing.JPanel {

	private List<Integer> recordWeekNum = new ArrayList<Integer>(); //全局变量，用于防止不同课程&不同任课教师出现在已经出现的时间段
	private List<Integer> recordSectionNum = new ArrayList<Integer>();
	private int count = 0;

	/** Creates new form AutoCourse */
	public AutoCourse() {
		initComponents();
		this.fillClassName();
	}

	private void fillClassName() {
		List<String> classList = new ArrayList<String>();
		ArrangeImpl ai = new ArrangeImpl();
		classList = ai.getClassName();
		for (String string : classList) {
			this.jComboBox1.addItem(string);
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jLabel1 = new javax.swing.JLabel();
		jComboBox1 = new javax.swing.JComboBox();
		jButton1 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jLabel6 = new javax.swing.JLabel();

		jTable1.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { "第一节", null, null, null, null, null },
						{ "第二节", null, null, null, null, null },
						{ "第三节", null, null, null, null, null },
						{ "第四节", null, null, null, null, null },
						{ "第五节", null, null, null, null, null },
						{ "第六节", null, null, null, null, null },
						{ "第七节", null, null, null, null, null },
						{ "第八节", null, null, null, null, null },
						{ "第九节", null, null, null, null, null },
						{ "第十节", null, null, null, null, null },
						{ "第十一节", null, null, null, null, null } },
				new String[] { "", "星期一", "星期二", "星期三", "星期四", "星期五" }) {
			Class[] types = new Class[] { java.lang.Object.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class };
			boolean[] canEdit = new boolean[] { false, false, false, false,
					false, false };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jScrollPane1.setViewportView(jTable1);

		jLabel1.setText("\u73ed\u7ea7\u540d\u79f0\uff1a");

		jButton1.setIcon(new javax.swing.ImageIcon(
				"..\\AutomaticCourse\\images\\search.png")); // NOI18N
		jButton1.setText("\u6392\u8bfe");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});
		
		jButton3.setIcon(new javax.swing.ImageIcon(
				"..\\AutomaticCourse\\images\\about.png")); // NOI18N
		jButton3.setIcon(new javax.swing.ImageIcon(
				"..\\AutomaticCourse\\images\\search.png")); // NOI18N
		jButton3.setText("\u6253\u5370");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});
		
		jButton2.setIcon(new javax.swing.ImageIcon(
				"..\\AutomaticCourse\\images\\exit.png")); // NOI18N
		jButton2.setText("\u9000\u51fa");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jLabel6.setFont(new java.awt.Font("微软雅黑", 1, 24));
		jLabel6.setText("\u4e00_\u952e_\u6392_\u8bfe");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jScrollPane1,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						770,
																						Short.MAX_VALUE)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										jLabel1)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																								.addComponent(
																										jComboBox1,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										255,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addGap(12,
																										12,
																										12)
																								.addComponent(
																										jButton1,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										98,
																										javax.swing.GroupLayout.PREFERRED_SIZE))))
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addComponent(
																		jButton3,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		98,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(18, 18,
																		18)
																.addComponent(
																		jButton2,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		98,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(303,
																		303,
																		303)
																.addComponent(
																		jLabel6)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jLabel6)
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1)
												.addComponent(jButton1)
												.addComponent(
														jComboBox1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jScrollPane1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										211,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										24, Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jButton2)
												.addComponent(jButton3))
								.addContainerGap()));
	}// </editor-fold>
	//GEN-END:initComponents

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		System.exit(0);
	}

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		String fileName = (String) jComboBox1.getSelectedItem(); //以excel文件保存在当前目录下
		fileName += "课表.xls";
		ArrangeImpl ai = new ArrangeImpl();
		try {
			TableModel tm = jTable1.getModel();
			File file = new File(fileName);
			FileWriter fw = new FileWriter(file);
			for (int i = 0; i < tm.getColumnCount(); i++) {
				fw.write(tm.getColumnName(i) + "\t");
			}
			fw.write("\n");
			for (int i = 0; i < tm.getRowCount(); i++) {
				for (int j = 0; j < tm.getColumnCount(); j++) {
					fw.write(tm.getValueAt(i, j) + "\t");
				}
				fw.write("\n");
			}
			fw.close();
			System.out.println(fileName + "打印完成,所在路径: "
					+ file.getAbsolutePath());
		} catch (IOException e) {
			System.out.println(e.getMessage());
			e.printStackTrace();
		}
	}

	private boolean compareTo(int weekNum, int sectionNum, int courseNum) { //用于比较weekNum与recordWeekNum[]
		boolean isSuccess = true; //用于比较sectionNum与recordSectionNum[]
		outer: for (int i = 0; i < recordWeekNum.size(); i++) {
			for (int j = 0; j < courseNum; j++) {
				if (recordWeekNum.get(i) == weekNum && recordSectionNum.get(i) == (sectionNum + j)) {
					isSuccess = false;
					break outer;
				}
			}
		}
		return isSuccess;
	}
	
	public int[] MessSeq(int length)
	{
		int []week = new int[length];
		for(int e = 0; e < length; e++)
		{
			week[e] = e + 1;
		}
		int []w = new int[length];
		int i = 0;
		int count = length;
		int posi = 0;
		int last = 0;
		do
		{
			posi=(int)(Math.random() * (count-last-1) + 0);
			w[i] = week[posi];
			week[posi] = week[count-last-1];
			last ++;
			i ++;
		}
		while(last < count);
		return w;
	}
	
	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		String className = (String) jComboBox1.getSelectedItem(); //获取需排课的班级名称
		String courseName = "";
		String teacherName = "";
		String weekNum = "";
		String sectionNum = "";
		String classroomPlace = "";
		int courseNum = 0;
		int classroomSize = 0;
		int classNum = 0;
		String classroomType = "";

		//清空table中的数据
		count = 0;											//清空计数器
		recordWeekNum = new ArrayList<Integer>();
		recordSectionNum = new ArrayList<Integer>();
		try {
			for (int i = 0; i < 11; i++) { 					//清空table中的数据
				for (int j = 1; j <= 5; j++) {
					jTable1.setValueAt(null, i, j);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		ArrangeImpl ai = new ArrangeImpl();
		List<String> arrangeList = ai.getInputInfo(className); //取出inputinfo中的数据
		classNum = ai.numByName(className); //获取班级人数
		outer: //对一门课程进行排课
		for (int i = 0; i < arrangeList.size(); i += 4) {
			courseName = arrangeList.get(i); //i:课程名; i+1:教师; i+2:节数; i+3:课室类型	
			teacherName = arrangeList.get(i + 1);
			courseNum = Integer.valueOf(arrangeList.get(i + 2));
			classroomType = arrangeList.get(i + 3);
			System.out.println(arrangeList.get(i) + "_"
					+ arrangeList.get(i + 1) + "_" + arrangeList.get(i + 2)
					+ "_" + arrangeList.get(i + 3));
			//对每个班的每门课程进行排课
			//1.判断某个时间，课室是否可用
			//2.寻找相应的课室类型&(容纳人数-班级人数)>0
			//3.判断某个时间老师是否空闲
			//4.上述123条件均为真，插表
			List<String> placeList = ai.placeByType(classroomType); //获取符合课室类型的课室地点
			int week[];
			int place[] = MessSeq(placeList.size());
			System.out.println("符合课室类型的课室数目: " + placeList.size());
//			for(int j: place) {
			for (int j = 0; j < placeList.size(); j++) {
//				j = (int) (Math.random() * (placeList.size()));
				week = MessSeq(5);
				classroomPlace = placeList.get(place[j]-1);
//				inner: for (int a = (int) (Math.random() * 2 + 1); a <= 5; a++) { //a表示周几,周一到周三的某一天开始上课
				inner:	 	
					for(int a: week){
					System.out.println("random_a = " + a);
					for (int b = 0; b <= 10; b++) { //b表示第几节,从周一第一节课开始遍历	
						System.out.println("课程:" + courseName + " 需要上 " + courseNum + "节");
						if (compareTo(a, b, courseNum)) {
							if (ai.getClassroomFlag(classroomPlace, a, b) == 0) { //课室未被占用													
								classroomSize = ai.sizeByPlace(classroomPlace); //获取匹配类型后的课室容纳人数
								if (classroomSize - classNum >= 0) {
									if (ai.getTeacherFlag(teacherName, a, b) == 0) { //任课教师空闲,插表,并设置课室教师占用
										System.out.println("b = " + b + " courseNum = " + courseNum);
										if(b < 4 && (b + courseNum) > 4) {			//防止早中晚同一课程分离
											continue;
										}else if(b < 8 && (b + courseNum) > 8) {
											continue;
										}
										if ((b + courseNum) <= 11) { 				//防止同一课程分天上
											for (int c = 0; c < courseNum; c++) {
												weekNum = String.valueOf(a);
												sectionNum = String.valueOf(b+ c);
												String arrange[] = {courseName,classroomPlace,weekNum, sectionNum,
																		className, teacherName };
												ai.insertResult(arrange);
												ai.setClassroomFlag(classroomPlace, a, b + c, 1); //置该时段课室Flag == 1,已占用
												ai.setTeacherFlag(teacherName, a, b + c, 1); //置该时段教师Flag == 1,正在授课	
												System.out.println("a=" + a + " b=" + b + " c=" + c);
												recordWeekNum.add(count, a);
												recordSectionNum.add(count, b + c);
												count++;
												System.out.println("count " + count);
											}
										} else {
											continue inner;
										}
										continue outer;
									}
								}
							}
						}
					}
				}
			}
		}

		//输出课表在表格中
		List<String> resultList = ai.getResultInfo(className);
		String item = "";
		System.out.println("itemNum: " + resultList.size() / 5);

		for (int i = 0; i < resultList.size(); i += 5) {
			courseName = resultList.get(i);
			classroomPlace = resultList.get(i + 1);
			weekNum = resultList.get(i + 2);
			sectionNum = resultList.get(i + 3);
			teacherName = resultList.get(i + 4);
			item += courseName;
			item += ",";
			item += classroomPlace;
			item += ",";
			item += teacherName;
			System.out.println("item: " + item);
			jTable1.setValueAt(item, Integer.valueOf(sectionNum), Integer.valueOf(weekNum)); //sectionNum行/weekNum列
			item = "";
		}

		System.out.println("-----------------end-----------------");
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JComboBox jComboBox1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	// End of variables declaration//GEN-END:variables

}